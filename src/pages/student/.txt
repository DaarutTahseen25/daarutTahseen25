  Improved Layout
      <div className="max-w-6xl mx-auto space-y-6">
        {/* Top Row - Profile Picture */}
        <div className="bg-white/90 rounded-2xl p-5 border border-white/50 shadow-sm">
          <div className="flex items-center gap-6">
            {/* Profile Picture */}
            <div className="relative group">
              <div className="w-20 h-20 md:w-24 md:h-24 rounded-full overflow-hidden border-3 border-white shadow-md">
                <img
                  src={profilePic}
                  alt="Profile"
                  className="w-full h-full object-cover"
                />
              </div>
              <div
                className="absolute inset-0 rounded-full bg-black/50 opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer"
                onClick={() => fileInputRef.current?.click()}
              >
                <Camera className="w-5 h-5 text-white" />
              </div>
              <input
                type="file"
                accept="image/*"
                ref={fileInputRef}
                className="hidden"
                onChange={handleProfilePicChange}
              />
            </div>

            {/* Profile Info */}
            <div className="flex-1">
              <div className="flex items-center gap-2 mb-1">
                <User className="w-4 h-4 text-[#009688]" />
                <h3 className="font-clash font-bold text-lg text-[#360400]">
                  Profile Picture
                </h3>
              </div>
              <p className="text-gray-600 text-sm">
                Click on your picture to change it
              </p>
            </div>
          </div>
        </div>

        {/* Main Content Grid */}
        <div className="grid gap-6 lg:grid-cols-2">
          {/* Personal Information */}
          <div className="bg-white/90 rounded-2xl p-5 border border-white/50 shadow-sm">
            <div className="flex items-center gap-2 mb-4">
              <div className="p-2 bg-[#009688]/10 rounded-lg">
                <User className="w-5 h-5 text-[#009688]" />
              </div>
              <div>
                <h3 className="font-clash font-bold text-lg text-[#360400]">
                  Personal Information
                </h3>
                <p className="text-gray-600 text-xs">Update your details</p>
              </div>
            </div>

            <form onSubmit={handleProfileUpdate} className="space-y-4">
              {/* Form Fields Grid */}
              <div className="grid gap-4 sm:grid-cols-2">
                {/* Full Name */}
                <div className="sm:col-span-2">
                  <label className="text-sm font-medium text-[#360400] block mb-1">
                    Full Name
                  </label>
                  <div className="relative">
                    <User className="w-4 h-4 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
                    <input
                      disabled={isLoadingProfile}
                      type="text"
                      value={form.fullName}
                      onChange={(e) =>
                        handleFormChange("fullName", e.target.value)
                      }
                      className="w-full py-2.5 pl-9 pr-3 rounded-lg border border-gray-200 bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] focus:border-[#009688] text-sm"
                      placeholder="Enter full name"
                    />
                  </div>
                </div>

                {/* Matric Number */}
                <div>
                  <label className="text-sm font-medium text-[#360400] block mb-1">
                    Matric Number
                  </label>
                  <div className="relative">
                    <GraduationCap className="w-4 h-4 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
                    <input
                      type="text"
                      disabled
                      value={form.matricNumber}
                      onChange={(e) =>
                        handleFormChange("matricNumber", e.target.value)
                      }
                      className="w-full py-2.5 pl-9 pr-3 rounded-lg border border-gray-200 bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] focus:border-[#009688] text-sm"
                      placeholder="Enter matric number"
                    />
                  </div>
                </div>

                {/* Gender */}
                <div>
                  <label className="text-sm font-medium text-[#360400] block mb-1">
                    Gender
                  </label>
                  <div className="relative">
                    <Users className="w-4 h-4 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
                    <select
                      disabled={isLoadingProfile}
                      onChange={(e) =>
                        handleFormChange("gender", e.target.value)
                      }
                      value={form.gender}
                      className="w-full py-2.5 pl-9 pr-8 rounded-lg border border-gray-200 bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] focus:border-[#009688] text-sm appearance-none capitalize"
                    >
                      {["male", "female", "other"].map((gen) => (
                        <option key={gen} value={gen}>
                          {gen}
                        </option>
                      ))}
                    </select>
                  </div>
                </div>

                {/* Email */}
                <div>
                  <label className="text-sm font-medium text-[#360400] block mb-1">
                    Email
                  </label>
                  <div className="relative">
                    <Mail className="w-4 h-4 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
                    <input
                      type="email"
                      disabled
                      value={form.email}
                      onChange={(e) =>
                        handleFormChange("email", e.target.value)
                      }
                      className="w-full py-2.5 pl-9 pr-3 rounded-lg border border-gray-200 bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] focus:border-[#009688] text-sm"
                      placeholder="Enter email"
                    />
                  </div>
                </div>

                {/* Phone */}
                <div>
                  <label className="text-sm font-medium text-[#360400] block mb-1">
                    Phone Number
                  </label>
                  <div className="relative">
                    <Phone className="w-4 h-4 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
                    <input
                      type="tel"
                      disabled={isLoadingProfile}
                      value={form.phoneNumber}
                      onChange={(e) =>
                        handleFormChange("phoneNumber", e.target.value)
                      }
                      className="w-full py-2.5 pl-9 pr-3 rounded-lg border border-gray-200 bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] focus:border-[#009688] text-sm"
                      placeholder="Enter phone number"
                    />
                  </div>
                </div>
              </div>

              <Button
                disabled={isLoadingProfile}
                variant="primary"
                size="lg"
                className={`w-full py-2.5 rounded-lg font-clash font-semibold text-sm mt-5 ${
                  !form.fullName ||
                  !form.email ||
                  !form.matricNumber ||
                  !form.phoneNumber
                    ? "opacity-50 cursor-not-allowed"
                    : ""
                }`}
                isDisabled={
                  !form.fullName ||
                  !form.email ||
                  !form.matricNumber ||
                  !form.phoneNumber
                }
                type="submit"
              >
                {isLoadingProfile ? "Saving..." : "Save Changes"}
              </Button>
            </form>
          </div>

          {/* Password Section */}
          <div className="bg-white/90 rounded-2xl p-5 border border-white/50 shadow-sm">
            <div className="flex items-center gap-2 mb-4">
              <div className="p-2 bg-[#009688]/10 rounded-lg">
                <Lock className="w-5 h-5 text-[#009688]" />
              </div>
              <div>
                <h3 className="font-clash font-bold text-lg text-[#360400]">
                  Security
                </h3>
                <p className="text-gray-600 text-xs">Change your password</p>
              </div>
            </div>

            <div className="space-y-4">
              {/* Current Password */}
              <div>
                <label className="text-sm font-medium text-[#360400] block mb-1">
                  Current Password
                </label>
                <div className="relative">
                  <input
                    disabled={isLoadingPassword}
                    type={show.current_password ? "text" : "password"}
                    value={passwords.current_password}
                    placeholder="Enter current password"
                    className={`w-full py-2.5 px-3 pr-10 rounded-lg border bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] text-sm ${
                      errors.current_password
                        ? "border-red-400 focus:border-red-400"
                        : "border-gray-200 focus:border-[#009688]"
                    }`}
                    onChange={(e) =>
                      handlePasswordInput("current_password", e.target.value)
                    }
                  />
                  <button
                    type="button"
                    disabled={isLoadingPassword}
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                    onClick={() =>
                      setShow((prev) => ({
                        ...prev,
                        current_password: !prev.current_password,
                      }))
                    }
                  >
                    {show.current_password ? (
                      <EyeOff className="w-4 h-4" />
                    ) : (
                      <Eye className="w-4 h-4" />
                    )}
                  </button>
                </div>
                {errors.current_password && (
                  <p className="text-red-500 text-xs flex items-center gap-1 mt-1">
                    <AlertCircle className="w-3 h-3" />
                    {errors.current_password}
                  </p>
                )}
              </div>

              {/* New Password */}
              <div>
                <label className="text-sm font-medium text-[#360400] block mb-1">
                  New Password
                </label>
                <div className="relative">
                  <input
                    disabled={isLoadingPassword}
                    type={show.new_password ? "text" : "password"}
                    value={passwords.new_password}
                    placeholder="Enter new password"
                    className={`w-full py-2.5 px-3 pr-10 rounded-lg border bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] text-sm ${
                      errors.new_password
                        ? "border-red-400 focus:border-red-400"
                        : "border-gray-200 focus:border-[#009688]"
                    }`}
                    onChange={(e) =>
                      handlePasswordInput("new_password", e.target.value)
                    }
                  />
                  <button
                    type="button"
                    disabled={isLoadingPassword}
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                    onClick={() =>
                      setShow((prev) => ({
                        ...prev,
                        new_password: !prev.new_password,
                      }))
                    }
                  >
                    {show.new_password ? (
                      <EyeOff className="w-4 h-4" />
                    ) : (
                      <Eye className="w-4 h-4" />
                    )}
                  </button>
                </div>
                {errors.new_password && (
                  <p className="text-red-500 text-xs flex items-center gap-1 mt-1">
                    <AlertCircle className="w-3 h-3" />
                    {errors.new_password}
                  </p>
                )}
              </div>

              {/* Confirm Password */}
              <div>
                <label className="text-sm font-medium text-[#360400] block mb-1">
                  Confirm New Password
                </label>
                <div className="relative">
                  <input
                    disabled={isLoadingPassword}
                    type={show.confirm_password ? "text" : "password"}
                    value={passwords.confirm_password}
                    placeholder="Confirm password"
                    className={`w-full py-2.5 px-3 pr-10 rounded-lg border bg-white/70 focus:outline-none focus:ring-1 focus:ring-[#009688] text-sm ${
                      errors.confirm_password
                        ? "border-red-400 focus:border-red-400"
                        : "border-gray-200 focus:border-[#009688]"
                    }`}
                    onChange={(e) =>
                      handlePasswordInput("confirm_password", e.target.value)
                    }
                  />
                  <button
                    disabled={isLoadingPassword}
                    type="button"
                    className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                    onClick={() =>
                      setShow((prev) => ({
                        ...prev,
                        confirm_password: !prev.confirm_password,
                      }))
                    }
                  >
                    {show.confirm_password ? (
                      <EyeOff className="w-4 h-4" />
                    ) : (
                      <Eye className="w-4 h-4" />
                    )}
                  </button>
                </div>
                {errors.confirm_password && (
                  <p className="text-red-500 text-xs flex items-center gap-1 mt-1">
                    <AlertCircle className="w-3 h-3" />
                    {errors.confirm_password}
                  </p>
                )}
              </div>

              <Button
                disabled={isLoadingPassword}
                variant="primary"
                size="lg"
                className={`w-full py-2.5 rounded-lg font-clash font-semibold text-sm mt-5 ${
                  !passwords.current_password ||
                  !passwords.new_password ||
                  !passwords.confirm_password ||
                  errors.current_password ||
                  errors.new_password ||
                  errors.confirm_password
                    ? "opacity-50 cursor-not-allowed"
                    : ""
                }`}
                onClick={handlePasswordChange}
                isDisabled={
                  !passwords.current_password ||
                  !passwords.new_password ||
                  !passwords.confirm_password ||
                  errors.current_password ||
                  errors.new_password ||
                  errors.confirm_password
                }
                type="button"
              >
                {isLoadingPassword ? "Changing..." : "Change Password"}
              </Button>
            </div>
          </div>
        </div>
      </div>
